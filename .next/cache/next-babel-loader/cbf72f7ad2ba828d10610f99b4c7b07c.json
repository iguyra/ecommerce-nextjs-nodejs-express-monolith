{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar axios = require(\"axios\");\n\nvar User = require(\"./models/userModel\");\n\nvar jwt = require(\"jsonwebtoken\");\n\nvar _require = require(\"util\"),\n    promisify = _require.promisify;\n\nexports.signup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res, next) {\n    var _req$body, email, password, passwordConfirm, newUser, token, cookieOptions;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _req$body = req.body, email = _req$body.email, password = _req$body.password, passwordConfirm = _req$body.passwordConfirm;\n            _context.next = 4;\n            return User.create({\n              email: email,\n              password: password,\n              passwordConfirm: passwordConfirm\n            });\n\n          case 4:\n            newUser = _context.sent;\n            token = jwt.sign({\n              id: newUser._id\n            }, process.env.JWT_SECRET, {\n              expiresIn: process.env.JWT_EXPIRES_IN\n            });\n            cookieOptions = {\n              expires: new Date(Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000),\n              // secure: true,\n              httpOnly: true //converted to milliseconds\n\n            };\n            res.cookie(\"jwt\", token, cookieOptions);\n            console.log(\"account created\");\n            res.status(201).json({\n              status: \"success\",\n              token: token,\n              data: {\n                newUser: newUser\n              }\n            });\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"errrorr\", _context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.login = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, user, token, cookieOptions;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n            _context2.next = 4;\n            return User.findOne({\n              email: email\n            }).select(\"+password\");\n\n          case 4:\n            user = _context2.sent;\n\n            if (!(!email || !password)) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", console.log(\"please type credientials\"));\n\n          case 7:\n            _context2.t0 = !user;\n\n            if (_context2.t0) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 11;\n            return user.correctPassword(password, user.password);\n\n          case 11:\n            _context2.t0 = !_context2.sent;\n\n          case 12:\n            if (!_context2.t0) {\n              _context2.next = 14;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", console.log(\"user does not exist, try again\"));\n\n          case 14:\n            console.log(\"account found\");\n            token = jwt.sign({\n              id: user._id\n            }, process.env.JWT_SECRET, {\n              expiresIn: process.env.JWT_EXPIRES_IN\n            });\n            cookieOptions = {\n              expires: new Date(Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000),\n              // secure: true,\n              httpOnly: true //converted to milliseconds\n\n            };\n            res.cookie(\"jwt\", token, cookieOptions);\n            res.status(201).json({\n              status: \"success\",\n              token: token,\n              data: {\n                user: user\n              }\n            });\n            _context2.next = 24;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t1 = _context2[\"catch\"](0);\n            console.log(_context2.t1);\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 21]]);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports[\"protected\"] = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(req, res, next) {\n    var user, token, verifiedToken, currentUser;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            user = {\n              name: \"res\"\n            };\n\n            if (req.headers.authorization && req.headers.authorization.startsWith(\"Bearer\")) {\n              token = req.headers.authorization.split(\" \")[1];\n            }\n\n            _context3.next = 4;\n            return promisify(jwt.verify)(token, process.env.JWT_SECRET);\n\n          case 4:\n            verifiedToken = _context3.sent;\n            _context3.next = 7;\n            return User.findById(verifiedToken.id);\n\n          case 7:\n            currentUser = _context3.sent;\n            console.log(\"req.headers.authorization\", req.headers.authorization, \"verifiedToken\", currentUser);\n            req.user = currentUser;\n            next();\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.getUser = function (req, res) {\n  console.log(\"protected accesed\");\n  var user = req.user;\n  res.json({\n    user: user\n  });\n};\n\nexports.getFrontUser = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(token) {\n    var config, _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(\"componentmounted\", token);\n            _context4.prev = 1;\n            config = {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            };\n            _context4.next = 5;\n            return axios.get(\"http://localhost:3000/api/users/cart\", config);\n\n          case 5:\n            _yield$axios$get = _context4.sent;\n            data = _yield$axios$get.data;\n            return _context4.abrupt(\"return\", data);\n\n          case 10:\n            _context4.prev = 10;\n            _context4.t0 = _context4[\"catch\"](1);\n            console.log(_context4.t0);\n\n          case 13:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 10]]);\n  }));\n\n  return function (_x9) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":null,"metadata":{},"sourceType":"script"}