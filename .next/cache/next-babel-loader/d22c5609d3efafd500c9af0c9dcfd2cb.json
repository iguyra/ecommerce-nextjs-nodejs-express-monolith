{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar axios = require(\"axios\");\n\nvar User = require(\"./models/userModel\");\n\nvar jwt = require(\"jsonwebtoken\");\n\nvar _require = require(\"util\"),\n    promisify = _require.promisify;\n\nexports.signup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res, next) {\n    var _req$body, email, password, passwordConfirm, newUser, token, cookieOptions;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _req$body = req.body, email = _req$body.email, password = _req$body.password, passwordConfirm = _req$body.passwordConfirm;\n            _context.next = 4;\n            return User.create({\n              email: email,\n              password: password,\n              passwordConfirm: passwordConfirm\n            });\n\n          case 4:\n            newUser = _context.sent;\n            token = jwt.sign({\n              id: newUser._id\n            }, process.env.JWT_SECRET, {\n              expiresIn: process.env.JWT_EXPIRES_IN\n            });\n            cookieOptions = {\n              expires: new Date(Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000),\n              // secure: true,\n              httpOnly: true //converted to milliseconds\n\n            };\n            res.cookie(\"jwt\", token, cookieOptions);\n            console.log(\"account created\");\n            res.status(201).json({\n              status: \"success\",\n              token: token,\n              data: {\n                newUser: newUser\n              }\n            });\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"errrorr\", _context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.login = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, user, token, cookieOptions;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n            _context2.next = 4;\n            return User.findOne({\n              email: email\n            }).select(\"+password\");\n\n          case 4:\n            user = _context2.sent;\n\n            if (!(!email || !password)) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", console.log(\"please type credientials\"));\n\n          case 7:\n            _context2.t0 = !user;\n\n            if (_context2.t0) {\n              _context2.next = 12;\n              break;\n            }\n\n            _context2.next = 11;\n            return user.correctPassword(password, user.password);\n\n          case 11:\n            _context2.t0 = !_context2.sent;\n\n          case 12:\n            if (!_context2.t0) {\n              _context2.next = 14;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", console.log(\"user does not exist, try again\"));\n\n          case 14:\n            console.log(\"account found\");\n            token = jwt.sign({\n              id: user._id\n            }, process.env.JWT_SECRET, {\n              expiresIn: process.env.JWT_EXPIRES_IN\n            });\n            cookieOptions = {\n              expires: new Date(Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000),\n              // secure: true,\n              httpOnly: true //converted to milliseconds\n\n            };\n            res.cookie(\"jwt\", token, cookieOptions);\n            res.status(201).json({\n              status: \"success\",\n              token: token,\n              data: {\n                user: user\n              }\n            });\n            _context2.next = 24;\n            break;\n\n          case 21:\n            _context2.prev = 21;\n            _context2.t1 = _context2[\"catch\"](0);\n            console.log(_context2.t1);\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 21]]);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports[\"protected\"] = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(req, res, next) {\n    var user, token, verifiedToken, currentUser;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            user = {\n              name: \"res\"\n            };\n\n            if (req.headers.authorization && req.headers.authorization.startsWith(\"Bearer\")) {\n              token = req.headers.authorization.split(\" \")[1];\n            }\n\n            _context3.next = 4;\n            return promisify(jwt.verify)(token, process.env.JWT_SECRET);\n\n          case 4:\n            verifiedToken = _context3.sent;\n            _context3.next = 7;\n            return User.findById(verifiedToken.id);\n\n          case 7:\n            currentUser = _context3.sent;\n            console.log(\"req.headers.authorization\", req.headers.authorization, \"verifiedToken\", currentUser);\n            req.user = currentUser;\n            next();\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x6, _x7, _x8) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexports.getUser = function (req, res) {\n  console.log(\"protected accesed\");\n  var user = req.user;\n  res.json({\n    user: user\n  });\n};\n\nexports.getFrontUser = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(token) {\n    var config, _yield$axios$get, data;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            console.log(\"componentmounted\", token);\n            _context4.prev = 1;\n            config = {\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            };\n            console.log(\"dataaaaaaaaaaaaaaaaaaaaaa\", data);\n            _context4.next = 6;\n            return axios.get(\"http://localhost:3000/api/users/cart\", config);\n\n          case 6:\n            _yield$axios$get = _context4.sent;\n            data = _yield$axios$get.data;\n            console.log(\"dataaaaaaaaaaaaaaaaaaaaaa\", data);\n            _context4.next = 11;\n            return data;\n\n          case 11:\n            return _context4.abrupt(\"return\", _context4.sent);\n\n          case 14:\n            _context4.prev = 14;\n            _context4.t0 = _context4[\"catch\"](1);\n            console.log(_context4.t0);\n\n          case 17:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4, null, [[1, 14]]);\n  }));\n\n  return function (_x9) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/USER/Desktop/isave/server/fauthContoller.js"],"names":["axios","require","User","jwt","promisify","exports","signup","req","res","next","body","email","password","passwordConfirm","create","newUser","token","sign","id","_id","process","env","JWT_SECRET","expiresIn","JWT_EXPIRES_IN","cookieOptions","expires","Date","now","JWT_COOKIE_EXPIRES_IN","httpOnly","cookie","console","log","status","json","data","login","findOne","select","user","correctPassword","name","headers","authorization","startsWith","split","verify","verifiedToken","findById","currentUser","getUser","getFrontUser","config","Authorization","get"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAnB;;eACsBA,OAAO,CAAC,MAAD,C;IAArBG,S,YAAAA,S;;AAERC,OAAO,CAACC,MAAR;AAAA,sEAAiB,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEgCF,GAAG,CAACG,IAFpC,EAELC,KAFK,aAELA,KAFK,EAEEC,QAFF,aAEEA,QAFF,EAEYC,eAFZ,aAEYA,eAFZ;AAAA;AAAA,mBAGSX,IAAI,CAACY,MAAL,CAAY;AAChCH,cAAAA,KAAK,EAALA,KADgC;AAEhCC,cAAAA,QAAQ,EAARA,QAFgC;AAGhCC,cAAAA,eAAe,EAAfA;AAHgC,aAAZ,CAHT;;AAAA;AAGPE,YAAAA,OAHO;AASPC,YAAAA,KATO,GASCb,GAAG,CAACc,IAAJ,CAAS;AAAEC,cAAAA,EAAE,EAAEH,OAAO,CAACI;AAAd,aAAT,EAA8BC,OAAO,CAACC,GAAR,CAAYC,UAA1C,EAAsD;AAClEC,cAAAA,SAAS,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAD2C,aAAtD,CATD;AAaPC,YAAAA,aAbO,GAaS;AACpBC,cAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAaR,OAAO,CAACC,GAAR,CAAYQ,qBAAZ,GAAoC,EAApC,GAAyC,EAAzC,GAA8C,EAA9C,GAAmD,IAAzE,CADW;AAEpB;AACAC,cAAAA,QAAQ,EAAE,IAHU,CAGJ;;AAHI,aAbT;AAmBbtB,YAAAA,GAAG,CAACuB,MAAJ,CAAW,KAAX,EAAkBf,KAAlB,EAAyBS,aAAzB;AACAO,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAzB,YAAAA,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAAA,MAAM,EAAE,SADW;AAEnBlB,cAAAA,KAAK,EAAEA,KAFY;AAGnBoB,cAAAA,IAAI,EAAE;AACJrB,gBAAAA,OAAO,EAAPA;AADI;AAHa,aAArB;AArBa;AAAA;;AAAA;AAAA;AAAA;AA6BbiB,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AA7Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;AAiCA5B,OAAO,CAACgC,KAAR;AAAA,uEAAgB,kBAAO9B,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEgBD,GAAG,CAACG,IAFpB,EAEJC,KAFI,cAEJA,KAFI,EAEGC,QAFH,cAEGA,QAFH;AAAA;AAAA,mBAGOV,IAAI,CAACoC,OAAL,CAAa;AAAE3B,cAAAA,KAAK,EAALA;AAAF,aAAb,EAAwB4B,MAAxB,CAA+B,WAA/B,CAHP;;AAAA;AAGNC,YAAAA,IAHM;;AAAA,kBAKR,CAAC7B,KAAD,IAAU,CAACC,QALH;AAAA;AAAA;AAAA;;AAAA,8CAMHoB,OAAO,CAACC,GAAR,CAAY,0BAAZ,CANG;;AAAA;AAAA,2BASR,CAACO,IATO;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASSA,IAAI,CAACC,eAAL,CAAqB7B,QAArB,EAA+B4B,IAAI,CAAC5B,QAApC,CATT;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,8CAUHoB,OAAO,CAACC,GAAR,CAAY,gCAAZ,CAVG;;AAAA;AAaZD,YAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACMjB,YAAAA,KAdM,GAcEb,GAAG,CAACc,IAAJ,CAAS;AAAEC,cAAAA,EAAE,EAAEsB,IAAI,CAACrB;AAAX,aAAT,EAA2BC,OAAO,CAACC,GAAR,CAAYC,UAAvC,EAAmD;AAC/DC,cAAAA,SAAS,EAAEH,OAAO,CAACC,GAAR,CAAYG;AADwC,aAAnD,CAdF;AAkBNC,YAAAA,aAlBM,GAkBU;AACpBC,cAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAaR,OAAO,CAACC,GAAR,CAAYQ,qBAAZ,GAAoC,EAApC,GAAyC,EAAzC,GAA8C,EAA9C,GAAmD,IAAzE,CADW;AAEpB;AACAC,cAAAA,QAAQ,EAAE,IAHU,CAGJ;;AAHI,aAlBV;AAwBZtB,YAAAA,GAAG,CAACuB,MAAJ,CAAW,KAAX,EAAkBf,KAAlB,EAAyBS,aAAzB;AAEAjB,YAAAA,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAAA,MAAM,EAAE,SADW;AAEnBlB,cAAAA,KAAK,EAAEA,KAFY;AAGnBoB,cAAAA,IAAI,EAAE;AACJI,gBAAAA,IAAI,EAAJA;AADI;AAHa,aAArB;AA1BY;AAAA;;AAAA;AAAA;AAAA;AAkCZR,YAAAA,OAAO,CAACC,GAAR;;AAlCY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;;AAsCA5B,OAAO,aAAP;AAAA,uEAAoB,kBAAOE,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACZ+B,YAAAA,IADY,GACL;AACXE,cAAAA,IAAI,EAAE;AADK,aADK;;AAMlB,gBAAInC,GAAG,CAACoC,OAAJ,CAAYC,aAAZ,IAA6BrC,GAAG,CAACoC,OAAJ,CAAYC,aAAZ,CAA0BC,UAA1B,CAAqC,QAArC,CAAjC,EAAiF;AAC/E7B,cAAAA,KAAK,GAAGT,GAAG,CAACoC,OAAJ,CAAYC,aAAZ,CAA0BE,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAR;AACD;;AARiB;AAAA,mBAUU1C,SAAS,CAACD,GAAG,CAAC4C,MAAL,CAAT,CAAsB/B,KAAtB,EAA6BI,OAAO,CAACC,GAAR,CAAYC,UAAzC,CAVV;;AAAA;AAUZ0B,YAAAA,aAVY;AAAA;AAAA,mBAYQ9C,IAAI,CAAC+C,QAAL,CAAcD,aAAa,CAAC9B,EAA5B,CAZR;;AAAA;AAYZgC,YAAAA,WAZY;AAclBlB,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyC1B,GAAG,CAACoC,OAAJ,CAAYC,aAArD,EAAoE,eAApE,EAAqFM,WAArF;AAEA3C,YAAAA,GAAG,CAACiC,IAAJ,GAAWU,WAAX;AACAzC,YAAAA,IAAI;;AAjBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAAA;AAAA;AAAA;AAAA;;AAoBAJ,OAAO,CAAC8C,OAAR,GAAkB,UAAC5C,GAAD,EAAMC,GAAN,EAAc;AAC9BwB,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEA,MAAMO,IAAI,GAAGjC,GAAG,CAACiC,IAAjB;AAEAhC,EAAAA,GAAG,CAAC2B,IAAJ,CAAS;AACPK,IAAAA,IAAI,EAAJA;AADO,GAAT;AAGD,CARD;;AAUAnC,OAAO,CAAC+C,YAAR;AAAA,uEAAuB,kBAAOpC,KAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrBgB,YAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCjB,KAAhC;AADqB;AAGbqC,YAAAA,MAHa,GAGJ;AACbV,cAAAA,OAAO,EAAE;AACPW,gBAAAA,aAAa,mBAAYtC,KAAZ;AADN;AADI,aAHI;AAQnBgB,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCG,IAAzC;AARmB;AAAA,mBAUIpC,KAAK,CAACuD,GAAN,CAAU,sCAAV,EAAkDF,MAAlD,CAVJ;;AAAA;AAAA;AAUXjB,YAAAA,IAVW,oBAUXA,IAVW;AAWnBJ,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCG,IAAzC;AAXmB;AAAA,mBAYNA,IAZM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAcnBJ,YAAAA,OAAO,CAACC,GAAR;;AAdmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const axios = require(\"axios\");\r\nconst User = require(\"./models/userModel\");\r\nconst jwt = require(\"jsonwebtoken\");\r\nconst { promisify } = require(\"util\");\r\n\r\nexports.signup = async (req, res, next) => {\r\n  try {\r\n    const { email, password, passwordConfirm } = req.body;\r\n    const newUser = await User.create({\r\n      email,\r\n      password,\r\n      passwordConfirm,\r\n    });\r\n\r\n    const token = jwt.sign({ id: newUser._id }, process.env.JWT_SECRET, {\r\n      expiresIn: process.env.JWT_EXPIRES_IN,\r\n    });\r\n\r\n    const cookieOptions = {\r\n      expires: new Date(Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000),\r\n      // secure: true,\r\n      httpOnly: true, //converted to milliseconds\r\n    };\r\n\r\n    res.cookie(\"jwt\", token, cookieOptions);\r\n    console.log(\"account created\");\r\n    res.status(201).json({\r\n      status: \"success\",\r\n      token: token,\r\n      data: {\r\n        newUser,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.log(\"errrorr\", err);\r\n  }\r\n};\r\n\r\nexports.login = async (req, res) => {\r\n  try {\r\n    const { email, password } = req.body;\r\n    const user = await User.findOne({ email }).select(\"+password\");\r\n\r\n    if (!email || !password) {\r\n      return console.log(\"please type credientials\");\r\n    }\r\n\r\n    if (!user || !(await user.correctPassword(password, user.password))) {\r\n      return console.log(\"user does not exist, try again\");\r\n    }\r\n\r\n    console.log(\"account found\");\r\n    const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET, {\r\n      expiresIn: process.env.JWT_EXPIRES_IN,\r\n    });\r\n\r\n    const cookieOptions = {\r\n      expires: new Date(Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000),\r\n      // secure: true,\r\n      httpOnly: true, //converted to milliseconds\r\n    };\r\n\r\n    res.cookie(\"jwt\", token, cookieOptions);\r\n\r\n    res.status(201).json({\r\n      status: \"success\",\r\n      token: token,\r\n      data: {\r\n        user,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexports.protected = async (req, res, next) => {\r\n  const user = {\r\n    name: \"res\",\r\n  };\r\n\r\n  let token;\r\n  if (req.headers.authorization && req.headers.authorization.startsWith(\"Bearer\")) {\r\n    token = req.headers.authorization.split(\" \")[1];\r\n  }\r\n\r\n  const verifiedToken = await promisify(jwt.verify)(token, process.env.JWT_SECRET);\r\n\r\n  const currentUser = await User.findById(verifiedToken.id);\r\n\r\n  console.log(\"req.headers.authorization\", req.headers.authorization, \"verifiedToken\", currentUser);\r\n\r\n  req.user = currentUser;\r\n  next();\r\n};\r\n\r\nexports.getUser = (req, res) => {\r\n  console.log(\"protected accesed\");\r\n\r\n  const user = req.user;\r\n\r\n  res.json({\r\n    user,\r\n  });\r\n};\r\n\r\nexports.getFrontUser = async (token) => {\r\n  console.log(\"componentmounted\", token);\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    };\r\n    console.log(\"dataaaaaaaaaaaaaaaaaaaaaa\", data);\r\n\r\n    const { data } = await axios.get(\"http://localhost:3000/api/users/cart\", config);\r\n    console.log(\"dataaaaaaaaaaaaaaaaaaaaaa\", data);\r\n    return await data;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"script"}