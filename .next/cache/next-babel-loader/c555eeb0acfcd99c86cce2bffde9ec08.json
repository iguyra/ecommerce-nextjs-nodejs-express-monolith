{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nexport var appContext = /*#__PURE__*/React.createContext([{}, function () {}]);\nexport var AppProvider = function AppProvider(props) {\n  _s();\n\n  var _useState = useState(null);\n\n  var _useState2 = _slicedToArray(_useState, 2);\n\n  cart = _useState2[0];\n  setCart = _useState2[1];\n  useEffect(function () {\n    if (true) {\n      var cartData = localStorage.getItem(\"cart-data\");\n      cartData = null !== cartData ? JSON.parse(cartData) : \"\";\n      setCart({\n        product: \"123232\"\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxs(appContext.Provider, {\n    value: [cart, setCart],\n    children: [props.children, \" \"]\n  });\n};\n\n_s(AppProvider, \"guVkFVVSew6hH2g/XBdZM40Ur3I=\");\n\n_c = AppProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/isave/context/appContext.js"],"names":["React","useState","useEffect","appContext","createContext","AppProvider","props","cart","setCart","cartData","localStorage","getItem","JSON","parse","product","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,IAAMC,UAAU,gBAAGH,KAAK,CAACI,aAAN,CAAoB,CAAC,EAAD,EAAK,YAAM,CAAE,CAAb,CAApB,CAAnB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAAA;;AAAA,kBAClBL,QAAQ,CAAC,IAAD,CADU;;AAAA;;AACnCM,EAAAA,IADmC;AAC7BC,EAAAA,OAD6B;AAGpCN,EAAAA,SAAS,CAAC,YAAM;AACd,cAAqB;AACnB,UAAIO,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAf;AAEAF,MAAAA,QAAQ,GAAG,SAASA,QAAT,GAAoBG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAApB,GAA2C,EAAtD;AAEAD,MAAAA,OAAO,CAAC;AAAEM,QAAAA,OAAO,EAAE;AAAX,OAAD,CAAP;AACD;AACF,GARQ,EAQN,EARM,CAAT;AAUA,sBAAO,MAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,CAACP,IAAD,EAAOC,OAAP,CAA5B;AAAA,eAA8CF,KAAK,CAACS,QAApD;AAAA,IAAP;AACD,CAdM;;GAAMV,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport const appContext = React.createContext([{}, () => {}]);\r\n\r\nexport const AppProvider = (props) => {\r\n  [cart, setCart] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (process.browser) {\r\n      let cartData = localStorage.getItem(\"cart-data\");\r\n\r\n      cartData = null !== cartData ? JSON.parse(cartData) : \"\";\r\n\r\n      setCart({ product: \"123232\" });\r\n    }\r\n  }, []);\r\n\r\n  return <appContext.Provider value={[cart, setCart]}>{props.children} </appContext.Provider>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}