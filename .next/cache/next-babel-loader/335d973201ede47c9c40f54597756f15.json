{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport Link from \"next/link\";\nimport React, { useContext, useState } from \"react\";\nimport { AppContext } from \"../../context/appContext\";\nimport { addFirstProduct, updateCart } from \"../../functions\";\n\nconst AddToCartButton = props => {\n  const {\n    product\n  } = props;\n  const {\n    0: cart,\n    1: setCart\n  } = useContext(AppContext);\n\n  const handleAddToCartClick = () => {\n    if (false) {\n      let existingCart = localStorage.getItem(\"isavecart\");\n      console.log(\"existingCart\", existingCart); //if cart the item(s) already update the existing\n\n      if (existingCart) {\n        existingCart = JSON.parse(existingCart);\n        const gtyToBeAdded = 1;\n        const updatedCart = updateCart(existingCart, product, gtyToBeAdded);\n        localStorage.setItem(\"isavecart\", JSON.stringify(updatedCart));\n        setCart(updatedCart);\n      } else {\n        //add frist product\n        const newCart = addFirstProduct(product);\n        localStorage.setItem(\"isavecart\", JSON.stringify(newCart));\n        setCart(newCart);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"button\", {\n      onClick: handleAddToCartClick,\n      className: \"jsx-3693898456\" + \" \" + \"addtocartbutton\",\n      children: \"add to cart\"\n    }), /*#__PURE__*/_jsx(_JSXStyle, {\n      id: \"3693898456\",\n      children: \".addtocartbutton.jsx-3693898456{border:none;text-transform:capitalize;padding:0.5rem 1rem;cursor:pointer;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNFUlxcRGVza3RvcFxcaXNhdmVcXGNvbXBvbmVudHNcXGNhcnRcXEFkZFRvQ2FydEJ1dHRvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFzQ2tCLEFBR3VCLFlBQ2MsMEJBQ04sb0JBQ0wsZUFDakIiLCJmaWxlIjoiQzpcXFVzZXJzXFxVU0VSXFxEZXNrdG9wXFxpc2F2ZVxcY29tcG9uZW50c1xcY2FydFxcQWRkVG9DYXJ0QnV0dG9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExpbmsgZnJvbSBcIm5leHQvbGlua1wiO1xyXG5pbXBvcnQgUmVhY3QsIHsgdXNlQ29udGV4dCwgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgQXBwQ29udGV4dCB9IGZyb20gXCIuLi8uLi9jb250ZXh0L2FwcENvbnRleHRcIjtcclxuaW1wb3J0IHsgYWRkRmlyc3RQcm9kdWN0LCB1cGRhdGVDYXJ0IH0gZnJvbSBcIi4uLy4uL2Z1bmN0aW9uc1wiO1xyXG5cclxuY29uc3QgQWRkVG9DYXJ0QnV0dG9uID0gKHByb3BzKSA9PiB7XHJcbiAgY29uc3QgeyBwcm9kdWN0IH0gPSBwcm9wcztcclxuXHJcbiAgY29uc3QgW2NhcnQsIHNldENhcnRdID0gdXNlQ29udGV4dChBcHBDb250ZXh0KTtcclxuXHJcbiAgY29uc3QgaGFuZGxlQWRkVG9DYXJ0Q2xpY2sgPSAoKSA9PiB7XHJcbiAgICBpZiAocHJvY2Vzcy5icm93c2VyKSB7XHJcbiAgICAgIGxldCBleGlzdGluZ0NhcnQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcImlzYXZlY2FydFwiKTtcclxuICAgICAgY29uc29sZS5sb2coXCJleGlzdGluZ0NhcnRcIiwgZXhpc3RpbmdDYXJ0KTtcclxuXHJcbiAgICAgIC8vaWYgY2FydCB0aGUgaXRlbShzKSBhbHJlYWR5IHVwZGF0ZSB0aGUgZXhpc3RpbmdcclxuICAgICAgaWYgKGV4aXN0aW5nQ2FydCkge1xyXG4gICAgICAgIGV4aXN0aW5nQ2FydCA9IEpTT04ucGFyc2UoZXhpc3RpbmdDYXJ0KTtcclxuICAgICAgICBjb25zdCBndHlUb0JlQWRkZWQgPSAxO1xyXG5cclxuICAgICAgICBjb25zdCB1cGRhdGVkQ2FydCA9IHVwZGF0ZUNhcnQoZXhpc3RpbmdDYXJ0LCBwcm9kdWN0LCBndHlUb0JlQWRkZWQpO1xyXG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiaXNhdmVjYXJ0XCIsIEpTT04uc3RyaW5naWZ5KHVwZGF0ZWRDYXJ0KSk7XHJcbiAgICAgICAgc2V0Q2FydCh1cGRhdGVkQ2FydCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy9hZGQgZnJpc3QgcHJvZHVjdFxyXG4gICAgICAgIGNvbnN0IG5ld0NhcnQgPSBhZGRGaXJzdFByb2R1Y3QocHJvZHVjdCk7XHJcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJpc2F2ZWNhcnRcIiwgSlNPTi5zdHJpbmdpZnkobmV3Q2FydCkpO1xyXG4gICAgICAgIHNldENhcnQobmV3Q2FydCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFJlYWN0LkZyYWdtZW50PlxyXG4gICAgICA8YnV0dG9uIG9uQ2xpY2s9e2hhbmRsZUFkZFRvQ2FydENsaWNrfSBjbGFzc05hbWU9XCJhZGR0b2NhcnRidXR0b25cIj5cclxuICAgICAgICBhZGQgdG8gY2FydFxyXG4gICAgICA8L2J1dHRvbj5cclxuXHJcbiAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAuYWRkdG9jYXJ0YnV0dG9uIHtcclxuICAgICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xyXG4gICAgICAgICAgcGFkZGluZzogMC41cmVtIDFyZW07XHJcbiAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICBgfTwvc3R5bGU+XHJcbiAgICA8L1JlYWN0LkZyYWdtZW50PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBBZGRUb0NhcnRCdXR0b247XHJcbiJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\USER\\\\\\\\Desktop\\\\\\\\isave\\\\\\\\components\\\\\\\\cart\\\\\\\\AddToCartButton.js */\"\n    })]\n  });\n};\n\nexport default AddToCartButton;","map":{"version":3,"sources":["C:/Users/USER/Desktop/isave/components/cart/AddToCartButton.js"],"names":["Link","React","useContext","useState","AppContext","addFirstProduct","updateCart","AddToCartButton","props","product","cart","setCart","handleAddToCartClick","existingCart","localStorage","getItem","console","log","JSON","parse","gtyToBeAdded","updatedCart","setItem","stringify","newCart"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,iBAA5C;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,KAApB;AAEA,QAAM;AAAA,OAACE,IAAD;AAAA,OAAOC;AAAP,MAAkBT,UAAU,CAACE,UAAD,CAAlC;;AAEA,QAAMQ,oBAAoB,GAAG,MAAM;AACjC,eAAqB;AACnB,UAAIC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BJ,YAA5B,EAFmB,CAInB;;AACA,UAAIA,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,GAAGK,IAAI,CAACC,KAAL,CAAWN,YAAX,CAAf;AACA,cAAMO,YAAY,GAAG,CAArB;AAEA,cAAMC,WAAW,GAAGf,UAAU,CAACO,YAAD,EAAeJ,OAAf,EAAwBW,YAAxB,CAA9B;AACAN,QAAAA,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkCJ,IAAI,CAACK,SAAL,CAAeF,WAAf,CAAlC;AACAV,QAAAA,OAAO,CAACU,WAAD,CAAP;AACD,OAPD,MAOO;AACL;AACA,cAAMG,OAAO,GAAGnB,eAAe,CAACI,OAAD,CAA/B;AACAK,QAAAA,YAAY,CAACQ,OAAb,CAAqB,WAArB,EAAkCJ,IAAI,CAACK,SAAL,CAAeC,OAAf,CAAlC;AACAb,QAAAA,OAAO,CAACa,OAAD,CAAP;AACD;AACF;AACF,GApBD;;AAsBA,sBACE,MAAC,KAAD,CAAO,QAAP;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEZ,oBAAjB;AAAA,0CAAiD,iBAAjD;AAAA;AAAA,MADF;AAAA;AAAA;AAAA;AAAA,IADF;AAgBD,CA3CD;;AA6CA,eAAeL,eAAf","sourcesContent":["import Link from \"next/link\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { AppContext } from \"../../context/appContext\";\r\nimport { addFirstProduct, updateCart } from \"../../functions\";\r\n\r\nconst AddToCartButton = (props) => {\r\n  const { product } = props;\r\n\r\n  const [cart, setCart] = useContext(AppContext);\r\n\r\n  const handleAddToCartClick = () => {\r\n    if (process.browser) {\r\n      let existingCart = localStorage.getItem(\"isavecart\");\r\n      console.log(\"existingCart\", existingCart);\r\n\r\n      //if cart the item(s) already update the existing\r\n      if (existingCart) {\r\n        existingCart = JSON.parse(existingCart);\r\n        const gtyToBeAdded = 1;\r\n\r\n        const updatedCart = updateCart(existingCart, product, gtyToBeAdded);\r\n        localStorage.setItem(\"isavecart\", JSON.stringify(updatedCart));\r\n        setCart(updatedCart);\r\n      } else {\r\n        //add frist product\r\n        const newCart = addFirstProduct(product);\r\n        localStorage.setItem(\"isavecart\", JSON.stringify(newCart));\r\n        setCart(newCart);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <button onClick={handleAddToCartClick} className=\"addtocartbutton\">\r\n        add to cart\r\n      </button>\r\n\r\n      <style jsx>{`\r\n        .addtocartbutton {\r\n          border: none;\r\n          text-transform: capitalize;\r\n          padding: 0.5rem 1rem;\r\n          cursor: pointer;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default AddToCartButton;\r\n"]},"metadata":{},"sourceType":"module"}