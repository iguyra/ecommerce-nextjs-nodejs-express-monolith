{"ast":null,"code":"const mongoose = require(\"mongoose\");\n\nconst validator = require(\"validator\");\n\nconst bcrypt = require(\"bcryptjs\");\n\nconst userSchema = new mongoose.Schema({\n  email: {\n    type: String,\n    required: [true, \"please tell us your email\"],\n    unique: true,\n    lowercase: true,\n    validate: [validator.isEmail, \"please provie a valid email\"]\n  },\n  photo: String,\n  password: {\n    type: String,\n    required: [true, \"please provie password\"],\n    minlength: 8,\n    select: false // to not show up in any output\n\n  },\n  passwordConfirm: {\n    type: String,\n    required: [true, \"please confirm your password\"],\n    validate: {\n      //this only works on CREATE N SAVE!!\n      validator: function (el) {\n        return el === this.password; // el is the passwordConfirm eg: abc === abc will return true\n      },\n      message: \"passwords are not the same\"\n    }\n  }\n});\nuserSchema.pre(\"save\", async function (next) {\n  this.password = await bcrypt.hash(this.password, 12);\n  this.passwordConfirm = undefined;\n  next();\n});\n\nuserSchema.methods.correctPassword = async function (candidatePassword, userPassword) {\n  return await bcrypt.compare(candidatePassword, userPassword);\n};\n\nconst User = mongoose.model(\"User\", userSchema);\nmongoose.models = {};\nmodule.exports = User;","map":null,"metadata":{},"sourceType":"script"}