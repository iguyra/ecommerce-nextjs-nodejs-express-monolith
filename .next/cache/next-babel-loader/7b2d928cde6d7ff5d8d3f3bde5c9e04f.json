{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\isave\\\\context\\\\appContext.js\";\nimport React, { useState, useEffect } from \"react\";\nexport const AppContext = /*#__PURE__*/React.createContext([{}, () => {}]);\n\nconst AppProvider = props => {\n  const {\n    0: cart,\n    1: setCart\n  } = useState(null);\n  useEffect(() => {\n    if (false) {\n      let cartData = localStorage.getItem(\"isavecart\");\n      cartData = null !== cartData ? JSON.parse(cartData) : \"\";\n      setCart(\"eee\");\n    }\n  }, []);\n  console.log(\"app cart\", cart);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: [cart, setCart],\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AppProvider;","map":{"version":3,"sources":["C:/Users/USER/Desktop/isave/context/appContext.js"],"names":["React","useState","useEffect","AppContext","createContext","AppProvider","props","cart","setCart","cartData","localStorage","getItem","JSON","parse","console","log","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,MAAMC,UAAU,gBAAGH,KAAK,CAACI,aAAN,CAAoB,CAAC,EAAD,EAAK,MAAM,CAAE,CAAb,CAApB,CAAnB;;AAEP,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC,IAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,eAAqB;AACnB,UAAIO,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAf;AAEAF,MAAAA,QAAQ,GAAG,SAASA,QAAT,GAAoBG,IAAI,CAACC,KAAL,CAAWJ,QAAX,CAApB,GAA2C,EAAtD;AACAD,MAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,GAPQ,EAON,EAPM,CAAT;AAQAM,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBR,IAAxB;AACA,sBACE,QAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,CAACA,IAAD,EAAOC,OAAP,CAA5B;AAAA,cACGF,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAjBD;;AAmBA,eAAeX,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nexport const AppContext = React.createContext([{}, () => {}]);\r\n\r\nconst AppProvider = (props) => {\r\n  const [cart, setCart] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (process.browser) {\r\n      let cartData = localStorage.getItem(\"isavecart\");\r\n\r\n      cartData = null !== cartData ? JSON.parse(cartData) : \"\";\r\n      setCart(\"eee\");\r\n    }\r\n  }, []);\r\n  console.log(\"app cart\", cart);\r\n  return (\r\n    <AppContext.Provider value={[cart, setCart]}>\r\n      {props.children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppProvider;\r\n"]},"metadata":{},"sourceType":"module"}