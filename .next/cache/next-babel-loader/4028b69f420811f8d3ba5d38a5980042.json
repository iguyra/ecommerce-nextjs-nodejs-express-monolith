{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar axios = require(\"axios\");\n\nexports.signup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res, next) {\n    var newUser;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // const newUser = await User.create({\n            //   email: req.body.email,\n            //   password: req.body.password,\n            //   password: req.body.passwordConfirm,\n            // });\n            newUser = {\n              email: req.body.email,\n              password: req.body.password,\n              passwordConfirm: req.body.passwordConfirm\n            };\n            console.log(\"new userr\", newUser);\n            res.json(newUser);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/USER/Desktop/isave/server/fauthContoller.js"],"names":["axios","require","exports","signup","req","res","next","newUser","email","body","password","passwordConfirm","console","log","json"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEAC,OAAO,CAACC,MAAR;AAAA,sEAAiB,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACf;AACA;AACA;AACA;AACA;AAEMC,YAAAA,OAPS,GAOC;AACdC,cAAAA,KAAK,EAAEJ,GAAG,CAACK,IAAJ,CAASD,KADF;AAEdE,cAAAA,QAAQ,EAAEN,GAAG,CAACK,IAAJ,CAASC,QAFL;AAGdC,cAAAA,eAAe,EAAEP,GAAG,CAACK,IAAJ,CAASE;AAHZ,aAPD;AAafC,YAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBN,OAAzB;AACAF,YAAAA,GAAG,CAACS,IAAJ,CAASP,OAAT;;AAde;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const axios = require(\"axios\");\r\n\r\nexports.signup = async (req, res, next) => {\r\n  // const newUser = await User.create({\r\n  //   email: req.body.email,\r\n  //   password: req.body.password,\r\n  //   password: req.body.passwordConfirm,\r\n  // });\r\n\r\n  const newUser = {\r\n    email: req.body.email,\r\n    password: req.body.password,\r\n    passwordConfirm: req.body.passwordConfirm,\r\n  };\r\n\r\n  console.log(\"new userr\", newUser);\r\n  res.json(newUser);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}