{"ast":null,"code":"var _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar axios = require(\"axios\");\n\nvar User = require(\"./models/userModel\");\n\nvar jwt = require(\"jsonwebtoken\");\n\nexports.signup = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(req, res, next) {\n    var _req$body, email, password, passwordConfirm, newUser, token, cookieOptions;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _req$body = req.body, email = _req$body.email, password = _req$body.password, passwordConfirm = _req$body.passwordConfirm;\n            _context.next = 4;\n            return User.create({\n              email: email,\n              password: password,\n              passwordConfirm: passwordConfirm\n            });\n\n          case 4:\n            newUser = _context.sent;\n            token = jwt.sign({\n              id: newUser._id\n            }, process.env.JWT_SECRET, {\n              expiresIn: process.env.JWT_EXPIRES_IN\n            });\n            cookieOptions = {\n              expires: new Date(Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000),\n              // secure: true,\n              httpOnly: true //converted to milliseconds\n\n            };\n            res.cookie(\"jwt\", token, cookieOptions);\n            console.log(\"account created\");\n            res.status(201).json({\n              status: \"success\",\n              token: token,\n              data: {\n                newUser: newUser\n              }\n            });\n            _context.next = 15;\n            break;\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"errrorr\", _context.t0);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 12]]);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.login = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(req, res) {\n    var _req$body2, email, password, user;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _req$body2 = req.body, email = _req$body2.email, password = _req$body2.password;\n            _context2.next = 3;\n            return User.findOne({\n              email: email\n            });\n\n          case 3:\n            user = _context2.sent;\n            console.log(\"userr\", user);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x4, _x5) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/USER/Desktop/isave/server/fauthContoller.js"],"names":["axios","require","User","jwt","exports","signup","req","res","next","body","email","password","passwordConfirm","create","newUser","token","sign","id","_id","process","env","JWT_SECRET","expiresIn","JWT_EXPIRES_IN","cookieOptions","expires","Date","now","JWT_COOKIE_EXPIRES_IN","httpOnly","cookie","console","log","status","json","data","login","findOne","user"],"mappings":";;;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,IAAI,GAAGD,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAME,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAnB;;AAEAG,OAAO,CAACC,MAAR;AAAA,sEAAiB,iBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAEgCF,GAAG,CAACG,IAFpC,EAELC,KAFK,aAELA,KAFK,EAEEC,QAFF,aAEEA,QAFF,EAEYC,eAFZ,aAEYA,eAFZ;AAAA;AAAA,mBAGSV,IAAI,CAACW,MAAL,CAAY;AAChCH,cAAAA,KAAK,EAALA,KADgC;AAEhCC,cAAAA,QAAQ,EAARA,QAFgC;AAGhCC,cAAAA,eAAe,EAAfA;AAHgC,aAAZ,CAHT;;AAAA;AAGPE,YAAAA,OAHO;AASPC,YAAAA,KATO,GASCZ,GAAG,CAACa,IAAJ,CAAS;AAAEC,cAAAA,EAAE,EAAEH,OAAO,CAACI;AAAd,aAAT,EAA8BC,OAAO,CAACC,GAAR,CAAYC,UAA1C,EAAsD;AAClEC,cAAAA,SAAS,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAD2C,aAAtD,CATD;AAaPC,YAAAA,aAbO,GAaS;AACpBC,cAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAaR,OAAO,CAACC,GAAR,CAAYQ,qBAAZ,GAAoC,EAApC,GAAyC,EAAzC,GAA8C,EAA9C,GAAmD,IAAzE,CADW;AAEpB;AACAC,cAAAA,QAAQ,EAAE,IAHU,CAGJ;;AAHI,aAbT;AAmBbtB,YAAAA,GAAG,CAACuB,MAAJ,CAAW,KAAX,EAAkBf,KAAlB,EAAyBS,aAAzB;AACAO,YAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAzB,YAAAA,GAAG,CAAC0B,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,cAAAA,MAAM,EAAE,SADW;AAEnBlB,cAAAA,KAAK,EAAEA,KAFY;AAGnBoB,cAAAA,IAAI,EAAE;AACJrB,gBAAAA,OAAO,EAAPA;AADI;AAHa,aAArB;AArBa;AAAA;;AAAA;AAAA;AAAA;AA6BbiB,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;;AA7Ba;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAAA;AAAA;AAAA;AAAA;;AAiCA5B,OAAO,CAACgC,KAAR;AAAA,uEAAgB,kBAAO9B,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,yBACcD,GAAG,CAACG,IADlB,EACNC,KADM,cACNA,KADM,EACCC,QADD,cACCA,QADD;AAAA;AAAA,mBAEKT,IAAI,CAACmC,OAAL,CAAa;AAAE3B,cAAAA,KAAK,EAALA;AAAF,aAAb,CAFL;;AAAA;AAER4B,YAAAA,IAFQ;AAIdP,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBM,IAArB;;AAJc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA","sourcesContent":["const axios = require(\"axios\");\r\nconst User = require(\"./models/userModel\");\r\nconst jwt = require(\"jsonwebtoken\");\r\n\r\nexports.signup = async (req, res, next) => {\r\n  try {\r\n    const { email, password, passwordConfirm } = req.body;\r\n    const newUser = await User.create({\r\n      email,\r\n      password,\r\n      passwordConfirm,\r\n    });\r\n\r\n    const token = jwt.sign({ id: newUser._id }, process.env.JWT_SECRET, {\r\n      expiresIn: process.env.JWT_EXPIRES_IN,\r\n    });\r\n\r\n    const cookieOptions = {\r\n      expires: new Date(Date.now() + process.env.JWT_COOKIE_EXPIRES_IN * 24 * 60 * 60 * 1000),\r\n      // secure: true,\r\n      httpOnly: true, //converted to milliseconds\r\n    };\r\n\r\n    res.cookie(\"jwt\", token, cookieOptions);\r\n    console.log(\"account created\");\r\n    res.status(201).json({\r\n      status: \"success\",\r\n      token: token,\r\n      data: {\r\n        newUser,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.log(\"errrorr\", err);\r\n  }\r\n};\r\n\r\nexports.login = async (req, res) => {\r\n  const { email, password } = req.body;\r\n  const user = await User.findOne({ email });\r\n\r\n  console.log(\"userr\", user);\r\n};\r\n"]},"metadata":{},"sourceType":"script"}