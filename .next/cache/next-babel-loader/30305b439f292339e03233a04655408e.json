{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport CartItem from \"./CartItem\";\nimport { AppContext } from \"../../../context/appContext\";\n\nvar CartWithItem = function CartWithItem(props) {\n  _s();\n\n  var _useState = useState([]),\n      products = _useState[0],\n      setProducts = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext[0],\n      setCart = _useContext[1];\n\n  setProducts(cart); // useEffect(() => {\n  //   const products = JSON.parse(localStorage.getItem(\"isavecart\"));\n  //   setProducts(products);\n  //   console.log(\"product from cartwith\", products);\n  // }, []);\n\n  return /*#__PURE__*/_jsxs(\"section\", {\n    className: \"cartitem\",\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"cartitem__messagedisplay\",\n      children: [/*#__PURE__*/_jsx(\"p\", {\n        className: \"cartitem__update\",\n        children: \"your cart is updated\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        className: \"cartitem__itemnumber\",\n        children: \"my cart (2 items)\"\n      })]\n    }), cart.products && cart.products.map(function (product) {\n      return /*#__PURE__*/_jsx(CartItem, {\n        product: product\n      });\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"cartitem__checkoutcontainer\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"cartitem__container\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"cartitem__totalcontainer\",\n          children: [/*#__PURE__*/_jsx(\"p\", {\n            className: \"cartitem__totalword\",\n            children: \"total\"\n          }), /*#__PURE__*/_jsxs(\"p\", {\n            className: \"cartitem__totalprice\",\n            children: [\"GH \", cart.totalProductsPrice]\n          })]\n        }), /*#__PURE__*/_jsx(\"p\", {\n          className: \"cartitem__policy\",\n          children: \"delievry fee not included\"\n        })]\n      }), /*#__PURE__*/_jsx(\"p\", {\n        className: \"cartitem__checkout\",\n        id: \"checkout\",\n        children: \"checkout\"\n      }), /*#__PURE__*/_jsx(\"p\", {\n        className: \"cartitem__call\",\n        children: \"call to order\"\n      })]\n    })]\n  });\n};\n\n_s(CartWithItem, \"GC7mvUdWlfKUZeu7CLbFabbQ0pE=\");\n\n_c = CartWithItem;\nexport default CartWithItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartWithItem\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/isave/components/cart/cartpage/cartWithItem.js"],"names":["React","useEffect","useState","useContext","CartItem","AppContext","CartWithItem","props","products","setProducts","cart","setCart","map","product","totalProductsPrice"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,UAAT,QAA2B,6BAA3B;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACEL,QAAQ,CAAC,EAAD,CADV;AAAA,MACvBM,QADuB;AAAA,MACbC,WADa;;AAAA,oBAENN,UAAU,CAACE,UAAD,CAFJ;AAAA,MAEvBK,IAFuB;AAAA,MAEjBC,OAFiB;;AAG9BF,EAAAA,WAAW,CAACC,IAAD,CAAX,CAH8B,CAK9B;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAS,IAAA,SAAS,EAAC,UAAnB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA,QADF,eAEE;AAAG,QAAA,SAAS,EAAC,sBAAb;AAAA;AAAA,QAFF;AAAA,MADF,EAMGA,IAAI,CAACF,QAAL,IACCE,IAAI,CAACF,QAAL,CAAcI,GAAd,CAAkB,UAACC,OAAD,EAAa;AAC7B,0BAAO,KAAC,QAAD;AAAU,QAAA,OAAO,EAAEA;AAAnB,QAAP;AACD,KAFD,CAPJ,eAWE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,qBAAb;AAAA;AAAA,YADF,eAEE;AAAG,YAAA,SAAS,EAAC,sBAAb;AAAA,8BAAwCH,IAAI,CAACI,kBAA7C;AAAA,YAFF;AAAA,UADF,eAKE;AAAG,UAAA,SAAS,EAAC,kBAAb;AAAA;AAAA,UALF;AAAA,QADF,eAQE;AAAG,QAAA,SAAS,EAAC,oBAAb;AAAkC,QAAA,EAAE,EAAC,UAArC;AAAA;AAAA,QARF,eAWE;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA,QAXF;AAAA,MAXF;AAAA,IADF;AA2BD,CAtCD;;GAAMR,Y;;KAAAA,Y;AAwCN,eAAeA,YAAf","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport CartItem from \"./CartItem\";\r\nimport { AppContext } from \"../../../context/appContext\";\r\n\r\nconst CartWithItem = (props) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [cart, setCart] = useContext(AppContext);\r\n  setProducts(cart);\r\n\r\n  // useEffect(() => {\r\n  //   const products = JSON.parse(localStorage.getItem(\"isavecart\"));\r\n  //   setProducts(products);\r\n  //   console.log(\"product from cartwith\", products);\r\n  // }, []);\r\n\r\n  return (\r\n    <section className=\"cartitem\">\r\n      <div className=\"cartitem__messagedisplay\">\r\n        <p className=\"cartitem__update\">your cart is updated</p>\r\n        <p className=\"cartitem__itemnumber\">my cart (2 items)</p>\r\n      </div>\r\n\r\n      {cart.products &&\r\n        cart.products.map((product) => {\r\n          return <CartItem product={product} />;\r\n        })}\r\n\r\n      <div className=\"cartitem__checkoutcontainer\">\r\n        <div className=\"cartitem__container\">\r\n          <div className=\"cartitem__totalcontainer\">\r\n            <p className=\"cartitem__totalword\">total</p>\r\n            <p className=\"cartitem__totalprice\">GH {cart.totalProductsPrice}</p>\r\n          </div>\r\n          <p className=\"cartitem__policy\">delievry fee not included</p>\r\n        </div>\r\n        <p className=\"cartitem__checkout\" id=\"checkout\">\r\n          checkout\r\n        </p>\r\n        <p className=\"cartitem__call\">call to order</p>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CartWithItem;\r\n"]},"metadata":{},"sourceType":"module"}