{"ast":null,"code":"export var addFirstProduct = function addFirstProduct(product) {\n  var productPrice = product.price; //create an empty array and push the item\n\n  var newCart = {\n    products: [],\n    totalProductsCount: 1,\n    totalProductsPrice: +productPrice\n  };\n  var newProduct = createNewProduct(product, productPrice, 1);\n  newCart.products.push(newProduct);\n  localStorage.setItem(\"isavecart\", JSON.stringify(newCart));\n  return newCart;\n}; // create a new product object\n\nexport var createNewProduct = function createNewProduct(product, productPrice, qty) {\n  return {\n    _id: product._id,\n    image: product.image,\n    price: productPrice,\n    name: product.name,\n    qty: qty,\n    totalPrice: productPrice * qty\n  };\n};\nexport var updateCart = function updateCart(existingCart, product, qtytoBeAdded) {\n  var newQty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var updatedProducts = getUpdatedProducts(existingCart.products, product, qtytoBeAdded, newQty);\n\n  var addPrice = function addPrice(total, item) {\n    total.totalPrice += item.totalPrice;\n    total.qty += item.qty;\n    return total;\n  }; //loop through the updated proudct array and add the totALprice of each item to get the totalPrice\n\n\n  var total = updatedProducts.reduce(addPrice, {\n    totalPrice: 0,\n    qty: 0\n  });\n  var updatedCart = {\n    products: updatedProducts,\n    totalProductsCount: +total.qty,\n    totalProductsPrice: +total.totalPrice\n  };\n  localStorage.setItem(\"isavecart\", JSON.stringify(updatedCart));\n  return updatedCart;\n}; //get updated products array\n//update the product if its exist\n//and add the new product to the existing cart\n\nexport var getUpdatedProducts = function getUpdatedProducts(existingProductsInCart, product, qtyToBeAdded) {\n  var newQty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var productExistIndex = isProductInCart(existingProductsInCart, product._id);\n  console.log(\"productExistIndex\", productExistIndex, product._id, product.productId); //if product exist (index of that product is found in te array) update the product qunatity and totalPrice\n\n  if (-1 < productExistIndex) {\n    var updatedProducts = existingProductsInCart;\n    var updatedProduct = updatedProducts[productExistIndex]; //if we have the new quantity of the product avail, se that else add the qtyToBeAdded\n\n    updatedProduct.qty = newQty ? +newQty : +updatedProduct.qty + qtyToBeAdded;\n    updatedProduct.totalPrice = +updatedProduct.price * +updatedProduct.qty; // updatedProduct.totalPrice = updatedProduct.price * updatedProduct.qty;\n\n    return updatedProducts;\n  } else {\n    //if the product is not found push the new product to the existing product array\n    var productPrice = +product.price;\n    var newProduct = createNewProduct(product, productPrice, qtyToBeAdded);\n    existingProductsInCart.push(newProduct);\n    return existingProductsInCart;\n  }\n}; //return index of the product if it exists\n\nexport var isProductInCart = function isProductInCart(existingProductsInCart, productId) {\n  var returnItemThatExists = function returnItemThatExists(item, index) {\n    if (productId === item._id) {\n      return item;\n    }\n  };\n\n  var newArray = existingProductsInCart.filter(returnItemThatExists);\n  console.log(\"returnItemThatExists\", productId, newArray);\n  return existingProductsInCart.indexOf(newArray[0]);\n};\nexport var updateQuantity = function updateQuantity(product, productCount) {\n  var newQty = +productCount + 1;\n  console.log(newQty);\n  var productPrice = product.price;\n  var newCart = {\n    products: [],\n    totalProductsCount: newQty,\n    totalProductsPrice: +productPrice * newQty\n  };\n  var newProduct = createNewProduct(product, productPrice, newQty);\n  newCart.products.push(newProduct);\n  localStorage.setItem(\"isavecart\", JSON.stringify(newCart));\n  console.log(newCart);\n  return {\n    newQty: newQty,\n    newCart: newCart\n  };\n};","map":null,"metadata":{},"sourceType":"module"}